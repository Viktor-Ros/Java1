package Other;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
/*
 * 
 * ЗАДАЧА ПРО СЛИТКИ
 * 
 * Условие: есть набор золотых слитков, каждый слиток в одном экземпляре и с уникальной массой, найти набор слитков, максимально приближенной к массе N
 * 
 * Решение: 
 * 1) Для каждой массы, от 0 до нужной, ищем решение при котором текущего набора слитков хватит чтобы полностью получить нужную массу
 * если такой набор есть на массу устанавливаем идентификатор - true, если нет - false
 * для 0 кг, кол-во слитков будет 0, поэтому для 0 кг устанавливаем true по умолчанию
 * далее берем каждый слиток и пробегаемся им по всем массам
 * если от текущей массы отнять массу слитка, и получившаяся масса, имеет идентификатор true, то текущей массе устанавливаем идентификатор true
 * перебираем массив с массами с конца, в противном случае при переборе первым слитком, true становятся массы, просто кратные массе слитка
 * а за тем и все массы становятся true
 * в итоге получаем массив, в котором, каждая масса, которую можно до конца забить набором слитков, имеет идентификатор true
 * 
 * 2) если искомую массу нельзя полностью забить слитками, то ищем меньшую масимально схожую массу
 * 
 * 3) из получившейся массы, вычитаем массу слитка, если получившаяся масса true, то добавляем этот слиток в список, и так со всеми слитками, пока масса не станет равной 0
 * и в конце получаем список с нужными слитками
 * 
 */


public class TaskGoldBar {
		
	public static void main(String[] args) {
		
		int s = 1;
 
		int[] gold = {1,3,4,5,9};// массив со слитками

		System.out.println("Набор слитков: " + Arrays.toString(gold));
		
		System.out.println("Вес, который нужно унести: " + s);
		 
		boolean[] arrayMass = new boolean[s + 1];//массив с массами до массы s  
		
		Arrays.fill(arrayMass, false);// заполняем массив false
		
		arrayMass[0] = true;//первый элемент массива true
		
		for(int j = 0; j < gold.length; j++) {
			
			for(int i = arrayMass.length-1; i >= gold[j]; i--) {

				if(arrayMass[i - gold[j]] == true) {
					
					arrayMass[i] = true;//делаем массу true, исходя из идентификатора массы баз слитка
					
				}
			}
		}

		int summ = 0;
		
		for(int i = s; i >=0; i--) {//ищем вес, который можно унести
			
			if(arrayMass[i] == true) {
				summ = i;
				break;
			}
		}
		
		System.out.println("Вес, который можно унести: " + summ);

		ArrayList<Integer> listMass = new ArrayList<>();
				
		for(int j = gold.length-1; j >=0; j--) {//Перебираем слитки 
			
			if(summ - gold[j] >= 0 && arrayMass[summ - gold[j]] == true) {//если масса без слитка true
				listMass.add(gold[j]);//добавляем слиток с список
				summ -= gold[j];//вычитаем массу слитка из основной массы
			}	
		}	   
		
		System.out.println("Нужные слитки: " + listMass);
	}
}